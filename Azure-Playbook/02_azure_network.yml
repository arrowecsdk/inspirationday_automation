---
- name: Azure Webserver Infrastructure
  hosts: localhost

  tasks:
    - name: Create a virtual network
      azure.azcollection.azure_rm_virtualnetwork:
        resource_group: "{{ resourcegroup }}"
        name: "{{ virtualnetwork_name }}"
        address_prefixes_cidr:
          - "{{ cidr }}"

    - name: Create a subnet
      azure.azcollection.azure_rm_subnet:
        resource_group: "{{ resourcegroup }}"
        virtual_network_name: "{{ virtualnetwork_name }}"
        name: "{{ webserver_subnet }}"
        address_prefix_cidr: "{{ cidr_public_a }}"

    - name: Create an availability set with advanced options
      azure.azcollection.azure_rm_availabilityset:
        name: "{{ availabilityset }}"
        location: "{{ location }}"
        resource_group: "{{ resourcegroup }}"
        platform_update_domain_count: 5
        platform_fault_domain_count: 3
        sku: Aligned

    - name: Create Security Group
      azure.azcollection.azure_rm_securitygroup:
        resource_group: "{{ resourcegroup }}"
        name: "{{ webserver_nsg }}"
        purge_rules: true
        rules:
          - name: "AllowSSH"
            protocol: Tcp
            source_address_prefix:
              - "0.0.0.0/0"
            destination_port_range: 22
            access: Allow
            priority: 101
            direction: Inbound
          - name: "AllowHTTP"
            protocol: Tcp
            source_address_prefix:
              - "0.0.0.0/0"
            destination_port_range:
              - 80
            access: Allow
            priority: 102

    - name: Create a public ip address for webservers
      azure.azcollection.azure_rm_publicipaddress:
        resource_group: "{{ resourcegroup }}"
        name: "public_ip_{{ item }}"
        allocation_method: static
      loop: "{{ servers }}"

    - name: Create a network interface for webservers
      azure.azcollection.azure_rm_networkinterface:
        name: "{{ item }}_nic01"
        resource_group: "{{ resourcegroup }}"
        virtual_network: "{{ virtualnetwork_name }}"
        subnet_name: "{{ webserver_subnet }}"
        security_group: "{{ webserver_nsg }}"
        ip_configurations:
          - name: "{{ item }}_nic01_ipconfig"
            public_ip_address_name: "public_ip_{{ item }}"
            primary: true
      loop: "{{ servers }}"
      async: 1000
      poll: 0
      register: create_nic

    - name: Wait for Network Interfaces
      ansible.builtin.async_status:
        jid: "{{ item.ansible_job_id }}"
      register: job_result
      until: job_result.finished
      retries: 120
      delay: 2
      with_items: "{{ create_nic.results }}"
