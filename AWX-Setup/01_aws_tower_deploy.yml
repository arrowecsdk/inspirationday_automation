---
- name: Deploy Tower on AWS
  hosts: localhost
  connection: local
  vars:
    vpc_name: "Tower-vpc"
    project_name: "ansibleawx"
    region: "eu-central-1"
    cidr: "10.1.0.0/16"
    cidr_public_a: "10.1.0.0/24"
    zone1: "a"

  tasks:
    - name: Create key pair using key_material obtained using 'file' lookup plugin
      amazon.aws.ec2_key:
        name: tower_keypair
        region: "{{ region }}"
        key_material: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
        tags:
          project: "{{ project_name }}"

    - name: Create VPC
      amazon.aws.ec2_vpc_net:
        name: "{{ vpc_name }}"
        cidr_block: "{{ cidr }}"
        region: "{{ region }}"
        state: present
        tags:
          project: "{{ project_name }}"
      register: network

    - name: Create subnet Servers
      amazon.aws.ec2_vpc_subnet:
        region: "{{ region }}"
        state: present
        cidr: "{{ cidr_public_a }}"
        az: "{{ region }}{{ zone1 }}"
        vpc_id: "{{ network.vpc.id }}"
        resource_tags:
          project: "{{ project_name }}"
          Name: "public_az_{{ zone1 }}"
      register: subnetpublica

    - name: Vpc internet gateway
      amazon.aws.ec2_vpc_igw:
        region: "{{ region }}"
        vpc_id: "{{ network.vpc.id }}"
        state: present
        tags:
          project: "{{ project_name }}"
      register: igw

    - name: Get Route table
      amazon.aws.ec2_vpc_route_table_info:
        region: "{{ region }}"
        filters:
          vpc-id: "{{ network.vpc.id }}"
      register: routea

    - name: Setup route tables public az a
      amazon.aws.ec2_vpc_route_table:
        region: "{{ region }}"
        vpc_id: "{{ network.vpc.id }}"
        lookup: id
        purge_subnets: false
        tags:
          project: "{{ project_name }}"
        route_table_id: "{{ routea.route_tables[0].id }}"
        subnets:
          - "{{ subnetpublica.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw.gateway_id }}"

    - name: Set Security Group for VPC
      amazon.aws.ec2_security_group:
        name: default
        description: default VPC security group
        vpc_id: "{{ network.vpc.id }}"
        region: "{{ region }}"
        rules:
          - proto: tcp
            ports:
              - 80
            cidr_ip: 0.0.0.0/0
            rule_desc: allow all http
          - proto: tcp
            ports:
              - 443
            cidr_ip: 0.0.0.0/0
            rule_desc: allow all https
          - proto: tcp
            ports:
              - 22
            cidr_ip: 0.0.0.0/0
            rule_desc: allow all ssh

    - name: Create towerserver
      amazon.aws.ec2_instance:
        key_name: tower_keypair
        region: "{{ region }}"
        instance_type: t3.xlarge
        image_id: ami-04e601abe3e1a910f
        wait: true
        security_group: default
        vpc_subnet_id: "{{ subnetpublica.subnet.id }}"
        network:
          assign_public_ip: true
        state: running
        volumes:
          - device_name: /dev/sda1
            ebs:
              volume_size: 32
              delete_on_termination: true
        tags:
          Name: tower
          project: "{{ project_name }}"
      register: tower

    - name: Set Tower Hostname fact
      ansible.builtin.set_fact:
        tower_hostname: "{{ tower.instances[0].network_interfaces[0].association.public_dns_name }}"

    - name: Export Tower Host
        ansible.builtin.lineinfile:
          path: ~/.bashrc
          line: export "CONTROLLER_HOST=http://{{ tower_hostname }}"
#            - export CONTROLLER_USERNAME=admin
