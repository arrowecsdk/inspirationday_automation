---
- name: Configure AWX
  hosts: localhost
  connection: local

  vars:
    ssh_public_key: "{{lookup('file', '~/.ssh/id_rsa.pub') }}"
    ssh_private_key: "{{lookup('file', '~/.ssh/id_rsa') }}"

  tasks:
    - name: Remove Demo Template
      awx.awx.job_template:
        name: Demo Job Template
        organization: Default
        state: absent

    - name: Remove Demo credential
      awx.awx.credential:
        name: Demo Credential
        credential_type: Machine
        state: absent

    - name: Remove Demo inventory
      awx.awx.inventory:
        name: Demo Inventory
        organization: Default
        state: absent

    - name: Remove Demo project
      awx.awx.project:
        name: Demo Project
        organization: Default
        state: absent

    - name: Create project
      awx.awx.project:
        name: Project
        organization: Default
        state: present
        scm_type: git
        scm_url: git@github.com:arrowecsdk/inspirationday_automation.git
        credential: "GitHub"

    - name: Azure inventory
      awx.awx.inventory:
        name: Azure Inventory
        organization: Default
        state: present

    - name: Add Azure inventory source
      awx.awx.inventory_source:
        name: "azure-source"
        inventory: Azure Inventory
        source: azure_rm
        credential: AzureCred
        overwrite: true
        update_on_launch: true
        organization: Default
        source_vars:
          keyed_groups:
            - prefix: tag
              key: tags

    - name: AWS inventory
      awx.awx.inventory:
        name: AWS Inventory
        organization: Default
        state: present

    - name: Add AWS inventory source
      awx.awx.inventory_source:
        name: "aws-source"
        inventory: AWS Inventory
        source: ec2
        credential: AWSCred
        overwrite: true
        update_on_launch: true
        organization: Default
        source_vars:
          keyed_groups:
            - prefix: tag
              key: tags

    - name: Create Azure Templates
      awx.awx.job_template:
        name: "{{ item.name }}"
        job_type: run
        inventory: Azure Inventory
        project: Project
        playbook: "{{ item.playbook }}"
        organization: Default
        state: present
        credential: "{{ item.cred }}"
        extra_vars: "{{ item.extra }}"
      loop:
        - {
          name: "Azure RG",
          playbook: "Azure-Playbook/01_azure_rg.yml",
          cred: "AzureCred",
          extra: '{ "none": "empty" }',
        }
        - {
          name: "Azure Network",
          playbook: "Azure-Playbook/02_azure_network.yml",
          cred: "AzureCred",
          extra: '{ "none": "empty" }',
        }
        - {
          name: "Azure Compute",
          playbook: "Azure-Playbook/03_azure_compute.yml",
          cred: "AzureCred",
          extra: '{ "ssh_public_key": "{{ ssh_public_key }}"}',
        }
        - {
          name: "Azure Compute Conf",
          playbook: "Azure-Playbook/04_azure_compute_conf.yml",
          cred: "AzureVMCred",
          extra: '{ "none": "empty" }',
        }
        - {
          name: "Azure Loadbalancer",
          playbook: "Azure-Playbook/05_azure_loadbalancer.yml",
          cred: "AzureCred",
          extra: '{ "none": "empty" }',
        }
        - {
          name: "Azure DNS",
          playbook: "Azure-Playbook/06_azure_domain.yml",
          cred: "AzureCred",
          extra: '{ "none": "empty" }',
        }

    - name: Create Azure VM credential
      awx.awx.credential:
        name: AzureVMCred
        credential_type: Machine
        state: present
        organization: Default
        inputs:
          username: azureuser
          ssh_key_data: "{{ ssh_private_key }}"

    - name: Create a workflow job template
      awx.awx.workflow_job_template:
        name: Azure-workflow
        organization: Default
        extra_vars:
          {
            'resourcegroup': 'webserver',
            'location': 'northeurope',
            'project_name': 'ansible',
            'user': 'azureuser',
            'virtualnetwork_name': 'webserver-net',
            'cidr': '10.0.0.0/16',
            'webserver_subnet': 'webserver_subnet',
            'cidr_public_a': '10.0.1.0/24',
            'availabilityset': 'webserver_avail',
            'webserver_nsg': 'webserver_nsg',
            'servers': ['webserver1', 'webserver2'],
            'resourcegroupdns': 'dnszone',
            'domain': 'netsec.arrowdemo.dk',
            'hostname': 'website'
          }
        workflow_nodes:
          - identifier: Azure RG
            unified_job_template:
              name: Azure RG
              type: job_template
            related:
              success_nodes:
                - identifier: Azure Network
          - identifier: Azure Network
            unified_job_template:
              name: Azure Network
              type: job_template
            related:
              success_nodes:
                - identifier: Azure Compute
                - identifier: Azure Loadbalancer
          - identifier: Azure Compute
            unified_job_template:
              name: Azure Compute
              type: job_template
            related:
              success_nodes:
                - identifier: Azure Inventory
          - identifier: Azure Compute Conf
            unified_job_template:
              name: Azure Compute Conf
              type: job_template
          - identifier: Azure Loadbalancer
            unified_job_template:
              name: Azure Loadbalancer
              type: job_template
            related:
              success_nodes:
                - identifier: Azure DNS
          - identifier: Azure DNS
            unified_job_template:
              name: Azure DNS
              type: job_template
          - identifier: Azure Inventory
            unified_job_template:
              name: azure-source
              type: inventory_source
            related:
              success_nodes:
                - identifier: Azure Compute Conf

    - name: Create AWS VM credential
      awx.awx.credential:
        name: AWSVMCred
        credential_type: Machine
        state: present
        organization: Default
        inputs:
          username: ec2-user
          ssh_key_data: "{{ ssh_private_key }}"

    - name: Create AWS Templates
      awx.awx.job_template:
        name: "{{ item.name }}"
        job_type: run
        inventory: AWS Inventory
        project: Project
        playbook: "{{ item.playbook }}"
        organization: Default
        state: present
        credential: "{{ item.cred }}"
        extra_vars: "{{ item.extra }}"
      loop:
        - {
          name: "AWS Infra",
          playbook: "AWS-Playbook/01_aws_infra.yml",
          cred: "AWSCred",
          extra: '{ "ssh_public_key": "{{ ssh_public_key }}"}',
        }
        - {
          name: "AWS Compute Conf",
          playbook: "AWS-Playbook/02_aws_compute_conf.yml",
          cred: "AWSVMCred",
          extra: '{ "none": "empty" }',
        }
        - {
          name: "AWS Loadbalancer",
          playbook: "AWS-Playbook/03_aws_loadbalancer.yml",
          cred: "AWSCred",
          extra: '{ "none": "empty" }',
        }