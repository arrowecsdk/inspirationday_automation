---
- name: Configure Cloud Credentials in AWX
  hosts: localhost
  connection: local

  vars:
    aws_path: ~/.aws/credentials
    azure_path: ~/.azure/credentials
    awx_host: "{{ lookup('file', '~/awxhostfile') }}"
    awx_user: admin
    awx_password: Passw0rd!

  environment:
    CONTROLLER_HOST: "http://{{ awx_host }}"
    CONTROLLER_USERNAME: "{{ awx_user }}"

  tasks:
    - name: Wait for HTTP ready
      ansible.builtin.uri:
        url: "http://{{ awx_host }}"
      register: url_result
      until: "url_result.status == 200"
      delay: 10
      retries: 600

    - name: Create a new token using username/password
      awx.awx.token:
        description: Setup
        scope: "write"
        state: present
        controller_username: "{{ awx_user }}"
        controller_password: "{{ awx_password }}"
      register: awx_token

    - name: Export Tower OAUTH Token
      ansible.builtin.lineinfile:
        path: ~/awxhosttoken
        line: "{{ awx_token.ansible_facts.controller_token.token }}"
        create: true
        mode: '0644'

    - name: AWS Credential file exist
      ansible.builtin.stat:
        path: "{{ aws_path }}"
      register: aws_cred_stat

    - name: Read AWS Credential file
      ansible.builtin.set_fact:
        aws_cred: "{{ lookup('file', aws_path).splitlines() }}"
      when: aws_cred_stat.stat.exists

    - name: Convert to list
      ansible.builtin.set_fact:
        aws_cred_list: "{{ aws_cred | list }}"
      when: aws_cred_stat.stat.exists

    - name: Set AWS Access Key
      ansible.builtin.set_fact:
        aws_access_key_id: "{{ aws_cred_list[1] | split('=') }}"
      when: aws_cred_stat.stat.exists

    - name: Set AWS Secret Key
      ansible.builtin.set_fact:
        aws_secret_access_key: "{{ aws_cred_list[2] | split('=') }}"
      when: aws_cred_stat.stat.exists

    - name: Create AWS Credentials
      awx.awx.credential:
        name: AWSCred
        credential_type: "Amazon Web Services"
        state: present
        organization: Default
        inputs:
          username: "{{ aws_access_key_id[1] }}"
          password: "{{ aws_secret_access_key[1] }}"
      environment:
        CONTROLLER_OAUTH_TOKEN: "{{ awx_token.ansible_facts.controller_token.token }}"
      when: aws_cred_stat.stat.exists

    - name: Azure Credential file exist
      ansible.builtin.stat:
        path: "{{ azure_path }}"
      register: azure_cred_stat

    - name: Read Azure Credential file
      ansible.builtin.set_fact:
        azure_cred: "{{ lookup('file', azure_path).splitlines() }}"
      when: azure_cred_stat.stat.exists

    - name: Convert to list
      ansible.builtin.set_fact:
        azure_cred_list: "{{ azure_cred | list }}"
      when: azure_cred_stat.stat.exists

    - name: Set Azure Subscription ID
      ansible.builtin.set_fact:
        azure_subscription_id: "{{ azure_cred_list[1] | split('=') }}"
      when: azure_cred_stat.stat.exists

    - name: Set Azure Client ID
      ansible.builtin.set_fact:
        azure_client_id: "{{ azure_cred_list[2] | split('=') }}"
      when: azure_cred_stat.stat.exists

    - name: Set Azure secret
      ansible.builtin.set_fact:
        azure_secret: "{{ azure_cred_list[3] | split('=') }}"
      when: azure_cred_stat.stat.exists

    - name: Set Azure Tenant ID
      ansible.builtin.set_fact:
        azure_tenant_id: "{{ azure_cred_list[4] | split('=') }}"
      when: azure_cred_stat.stat.exists

    - name: Create Azure Credentials
      awx.awx.credential:
        name: AzureCred
        credential_type: "Microsoft Azure Resource Manager"
        state: present
        organization: Default
        inputs:
          subscription: "{{ azure_subscription_id[1] }}"
          client: "{{ azure_client_id[1] }}"
          secret: "{{ azure_secret[1] }}"
          tenant: "{{ azure_tenant_id[1] }}"
      environment:
        CONTROLLER_OAUTH_TOKEN: "{{ awx_token.ansible_facts.controller_token.token }}"
